{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "origins_data_type_text_component",
	"description": "A string or object used for displaying text with fancy formatting.\nSee: https://minecraft.fandom.com/wiki/Raw_JSON_text_format",
	"type":["string", "boolean", "number", "array", "object"],
	"properties": {
		"color": {
			"type": "string",
			"description": "The color to render the content in.",
			"pattern": "^(?:#[0-9]{6}|dark_(?:blue|green|aqua|red|purple|gray)|black|gold|gray|blue|green|aqua|red|light_purple|yellow|white|reset)$",
			"examples": ["black", "dark_blue", "dark_green", "dark_aqua", "dark_red", "dark_purple", "gold", "gray", "dark_gray", "blue", "green", "aqua", "red", "light_purple", "yellow", "white", "reset", "#FF0000"]
		},
		"font": {
			"type": "string",
			"description": "The resource location of the font for this component in the resource pack within assets/<namespace>/font.",
			"pattern": "^[a-z0-9\\-_\\.]+:[a-z0-9\\-_\\./]+$",
			"default": "minecraft:default"
		},
		"bold": {
			"type":"boolean",
			"description": "Whether to render the content in bold.",
			"default":false
		},
		"italic": {
			"type":"boolean",
			"description": "Whether to render the content in italics."
		},
		"underlined": {
			"type":"boolean",
			"description": "Whether to underline the content.",
			"default":false
		},
		"strikethrough": {
			"type":"boolean",
			"description": "Whether to strikethrough the content.",
			"default":false
		},
		"obfuscated": {
			"type":"boolean",
			"description": "Whether to render the content obfuscated.",
			"default":false
		},
		"insertion": {
			"type":"string",
			"description": "When the text is shift-clicked by a player, this string is inserted in their chat input. It does not overwrite any existing text the player was writing. This only works in chat messages."
		},
		"clickEvent": {
			"type":"object",
			"description": "Allows for events to occur when the player clicks on text. Only work in chat messages and written books, unless specified otherwise.",
			"properties": {
				"action": {
					"enum":["open_url", "open_file", "run_command", "suggest_command", "change_page", "copy_to_clipboard"],
					"description": "The action to perform when clicked."
				},
				"value": {
					"type":"string",
					"description": "The URL, file path, chat, command or book page used by the specified action."
				}
			},
			"required": ["action"]
		},
		"hoverEvent": {
			"type":"object",
			"description": "Allows for a tooltip to be displayed when the player hovers their mouse over text.",
			"properties": {
				"action": {
					"enum":["show_text", "show_item", "show_entity"],
					"description": "The type of tooltip to show."
				},
				"value": {
					"type":"string",
					"deprecated":true,
					"description": "[Deprecated]The formatting and type of this tag varies depending on the action."
				}
			},
			"required": ["action", "contents"],
			"allOf": [
				{
					"if": {
						"properties": { "action": {"const":"show_text"} },
						"required": ["action"]
					},
					"then": {
						"properties": {
							"contents": {
								"$ref":"#"
							}
						}
					}
				}, {
					"if": {
						"properties": { "action": {"const":"show_item"} },
						"required": ["action"]
					},
					"then": {
						"properties": {
							"contents": {
								"type":"object",
								"properties": {
									"id": {
										"type": "string",
										"pattern": "^[a-z0-9\\-_\\.]+:[a-z0-9\\-_\\./]+$",
										"description": "The item's resource location. Present `minecraft:air` if invalid."
									},
									"count": {
										"type":"integer",
										"minimum": 1,
										"default": 1
									},
									"tag": {
										"type":"string"
									}
								},
								"required": ["id"]
							}
						}
					}
				}, {
					"if": {
						"properties": { "action": {"const":"show_entity"} },
						"required": ["action"]
					},
					"then": {
						"properties": {
							"contents": {
								"type":"object",
								"properties": {
									"name": {
										"description": "Hidden if not present. A raw JSON text that is displayed as the name of the entity.",
										"$ref": "#"
									},
									"type": {
										"type":"string",
										"pattern": "^[a-z0-9\\-_\\.]+:[a-z0-9\\-_\\./]+$",
										"description": "A string containing the type of the entity, as a resource location. Present `minecraft:pig` if invalid."
									},
									"id": {
										"type": "string",
										"pattern": "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$",
										"description": "A string containing the UUID of the entity in the hyphenated hexadecimal format."
									}
								},
								"required": ["id", "type"]
							}
						}
					}
				}
			]
		},
		"text": {
			"type":["string", "boolean", "number"],
			"description": "A string containing plain text to display directly. Can also be a number or boolean that is displayed directly."
		},
		"translate": {
			"type":"string",
			"description": "A translation identifier, corresponding to the identifiers found in loaded language files. Displayed as the corresponding text in the player's selected language. If no corresponding translation can be found, the identifier itself is used as the translated text."
		},
		"with": {
			"type":"array",
			"items": {"$ref":"#"}
		},
		"score": {
			"type":"object",
			"description": "Displays a score holder's current score in an objective. Displays nothing if the given score holder or the given objective do not exist, or if the score holder is not tracked in the objective.",
			"properties": {
				"name": {
					"type":"string",
					"description": "The name of the score holder whose score should be displayed. This can be a selector like @p or an explicit name. If the text is a selector, the selector must be guaranteed to never select more than one entity, possibly by adding limit=1. If the text is \"*\", it shows the reader's own score."
				},
				"objective": {
					"type":"string",
					"description": "The internal name of the objective to display the player's score in."
				},
				"value": {
					"type":"string",
					"description": "If present, this value is displayed regardless of what the score would have been."
				}
			},
			"required": ["name", "objective"]
		},
		"selector": {
			"type":"string",
			"description": "A string containing a selector."
		},
		"separator": {
			"type":"object",
			"description": "A raw JSON text component. Used as the separator between different names, if the component selects multiple entities.",
			"default": {"color": "gray", "text": ", "},
			"$ref":"#"
		},
		"keybind": {
			"type":"string",
			"description": "A keybind identifier, to be displayed as the name of the button that is currently bound to that action. For example, {\"keybind\": \"key.inventory\"} displays \"e\" if the player is using the default control scheme.",
			"examples": ["key.inventory"]
		},
		"nbt": {
			"type":"string",
			"description": "The NBT path used for looking up NBT values from an entity, block entity, or storage. Requires one of block, entity, or storage. Having more than one is allowed, but only one is used."
		},
		"interpret": {
			"type":"boolean",
			"description": "If true, the game attempts to parse the text of each NBT value as a raw JSON text component. Ignored if nbt is not present.",
			"default":false
		},
		"block": {
			"type":"string",
			"description": "A string specifying the coordinates of the block entity from which the NBT value is obtained. The coordinates can be absolute, relative, or local. Ignored if nbt is not present."
		},
		"entity": {
			"type":"string",
			"description": "A string specifying the target selector for the entity or entities from which the NBT value is obtained. Ignored if nbt is not present."
		},
		"storage": {
			"type":"string",
			"description": "A string specifying the resource location of the command storage from which the NBT value is obtained. Ignored if nbt is not present."
		}
	},
	"anyOf": [
		{"type":["string", "boolean", "number", "array"]},
		{"type":"object","required": ["text"]},
		{"type":"object","required": ["translate"]},
		{"type":"object","required": ["selector"]},
		{"type":"object","required": ["keybind"]},
		{"type":"object","required": ["nbt"], "anyOf": [
			{"required":["block"]},
			{"required":["entity"]},
			{"required":["storage"]}
		]}
	],
	"minItems": 1,
	"items": {"$ref":"#"}
}